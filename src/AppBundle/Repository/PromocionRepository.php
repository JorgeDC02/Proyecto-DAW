<?php

namespace AppBundle\Repository;

/**
 * PromocionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromocionRepository extends \Doctrine\ORM\EntityRepository
{
    public function queryAllPromocion()
    {
        return $this->createQueryBuilder('promo')
            ->select('product.precio', 'promo.id AS id', 'product.id AS produ','promo.descuentoPorc')
            ->leftJoin('promo.product','product')
            ->getQuery()
            ->execute()
            ;
    }

    public function allpromocion()
    {
        return $this->queryAllPromocion()->execute();
    }

    public function queryListadoPromocion()
    {
        return $this->createQueryBuilder('promo')
            ->select('promo.descuentoPorc','product.id AS id, product.precio, product.modelo, product.descripcion', 'marcas.nMarca', 'urlImagen.imageName')
            ->leftJoin('promo.product','product')
            ->leftJoin('product.marcas','marcas')
            ->leftJoin('product.urlImagen', 'urlImagen')
            ->getQuery()
            ->execute()
            ;
    }

    public function listadoPromocion()
    {
        return $this->queryListadoPromocion()->execute();
    }

    public function queryPrecioProductoByProductoId($id)
    {
        return $this->createQueryBuilder('promo')
            ->select('product.precio')
            ->leftJoin('promo.product','product')
            ->andWhere('product.id = :id')
            //->andWhere('product.id AS produ = :id')
            ->setParameter('id',$id)
            ->getQuery()
            ->execute()
            ;
    }

    public function PrecioProductoByProductoId($id)
    {
        return $this->queryPrecioProductoByProductoId($id)->execute();
    }

    //Producto de promocion de portada
    public function queryPromocionPortada()
    {
        return $this->createQueryBuilder('promo')
            ->select('product.id AS id, product.tipoProducto','product.modelo', 'product.precio', 'promo.descuentoPorc', 'urlImagen.imageName')
            ->leftJoin('promo.product', 'product')
            ->leftJoin('product.urlImagen',"urlImagen")
            ->andWhere('promo.id = 1')//Identificacion del producto con promocion 1
            ->getQuery()
            ->execute()
            ;
    }

    public function novedadPortada()
    {
        return $this->queryNovedadPortada()->execute();
    }
}
