<?php

namespace AppBundle\Repository;

/**
 * ProductoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductoRepository extends \Doctrine\ORM\EntityRepository
{
    public function queryProductoById($id)
    {
        return $this->createQueryBuilder('prod')
            //->select('prod.id AS id','prod.tipoProducto', 'prod.precio', 'marcas.nMarca','prod.modelo', 'urlImagen.imageName', 'prod.descripcion', 'comentario.id AS id_comm')
            ->select('prod.id AS id','prod.tipoProducto', 'prod.precio', 'marcas.nMarca','prod.modelo', 'urlImagen.imageName', 'prod.descripcion', 'prod.valoracion')
            ->leftJoin('prod.marcas','marcas')
            ->leftJoin('prod.urlImagen','urlImagen')
            //->leftJoin('prod.comentario','comentario')
            //->Join('prod.comentario','comentario')
            //->groupBy('prod.id')
            ->andWhere('prod.id = :id')
            ->setParameter('id',$id)
            ->getQuery()
            ->execute()
            ;
    }

    public function productoById($id)
    {
        return $this->queryProductoById($id)->execute();
    }

    public function queryBestVoted()
    {
        return $this->createQueryBuilder('v')
            ->select('v.valoracion', 'v.id AS id', 'v.tipoProducto', 'marcas.nMarca', 'v.modelo','urlImagen.imageName')
            //->groupBy('v.valoracion')
            ->leftJoin('v.marcas', 'marcas')
            ->leftJoin('v.urlImagen','urlImagen')
            ->addOrderBy('v.valoracion','DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->execute()
            ;
    }

    public function bestVotedd()
    {
        return $this->queryBestVoted()->execute();
    }
    
    public function queryAllProductByDep($nombre)
    {
        return $this->createQueryBuilder('prod')
            ->select('prod.id AS id, prod.modelo, prod.precio, prod.descripcion','marcas.nMarca', 'urlImagen.imageName')
            ->leftJoin('prod.marcas', 'marcas')
            ->leftJoin('prod.depts','depts')
            ->leftJoin('prod.urlImagen','urlImagen')
            //>join('prod.comentario','comentario')
            ->andWhere('depts.nombre = :nombre')
            ->setParameter('nombre',$nombre)
            ->getQuery()
            ->execute()
            ;
    }
    
    public function allProductByDep($nombre)
    {
        return $this->queryAllProductByDep($nombre)->execute();
    }
}
